name: Deploy Docusaurus to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"


      # 1) Create gh-pages branch if it does not exist (once)
      - name: Ensure gh-pages branch exists (git)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git fetch origin
          if git ls-remote --exit-code --heads origin gh-pages >/dev/null 2>&1; then
            echo "gh-pages exists."
          else
            echo "Creating gh-pages branch..."
            # use token for push
            git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            # create an orphan branch with a placeholder commit
            git checkout --orphan gh-pages
            git reset --hard
            echo "<!doctype html><meta charset=utf-8>gh-pages init" > index.html
            git add index.html
            git commit -m "Initialize gh-pages"
            git push -u origin gh-pages
            # return to the original branch
            git checkout -f "${GITHUB_REF_NAME}"
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: docs/package-lock.json

      - name: Install dependencies
        working-directory: docs
        run: npm ci

      - name: Build
        working-directory: docs
        run: npm run build

      - name: Deploy to gh-pages
        working-directory: docs
        env:
          GIT_USER: x-access-token:${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run deploy
